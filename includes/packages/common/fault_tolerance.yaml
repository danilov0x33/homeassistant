common_fault_tolerance_package:
  recorder:
    include:
      entities:
        - binary_sensor.main_control
        - switch.main_control_mode

  homeassistant:
    customize:
      binary_sensor.main_control:
        friendly_name: Является ли текущий сервер мастером
      switch.main_control_mode:
        friendly_name: "Режим управления"

  mqtt:
    binary_sensor:
      - name: main_control
        state_topic: "custom/main_control/state"
        value_template: "{{ is_state('sensor.local_ip', value) }}"
        payload_on: "True"
        payload_off: "False"

    sensor:
      - name: main_control
        state_topic: "custom/main_control/state"

  switch:
    - platform: template
      switches:
        main_control_mode:
          value_template: "{{  is_state('binary_sensor.main_control', 'on') }}"
          turn_on:
            service: mqtt.publish
            data_template:
              topic: "custom/main_control/state"
              payload_template: "{{ states('sensor.local_ip') }}"
              retain: true
          turn_off:
            service: mqtt.publish
            data_template:
              topic: "custom/main_control/state"
              payload_template: "{{ (['192.168.3.20', '192.168.3.21'] | reject('match', states('sensor.local_ip')) | list)[0] }}"
              retain: true
          icon_template: >-
            {% if is_state('switch.main_control_mode', 'on') %}
              mdi:server
            {% else %}
              mdi:server-off
            {% endif %}

  # binary_sensor:
  #   - platform: rest
  #     name: main_instant_available
  #     scan_interval: 3
  #     resource_template: "http://{{ states('sensor.main_control') }}:8123/manifest.json"

  # automation:
  #   - id: system_toggle_automation_control_mode
  #     alias: system_toggle_automation_control_mode
  #     variables:
  #       all_main_automations: >
  #         {{ states.automation | map(attribute='entity_id') | select('search', '_main$') | list }}
  #     trigger:
  #       - platform: state
  #         entity_id: binary_sensor.main_control
  #         from: "on"
  #         to: "off"
  #       - platform: state
  #         entity_id: binary_sensor.main_control
  #         from: "off"
  #         to: "on"
  #       - platform: state
  #         entity_id: binary_sensor.main_instant_available
  #     action:
  #       - choose:
  #           - conditions:
  #               - condition: or
  #                 conditions:
  #                   - condition: and
  #                     conditions:
  #                       - "{{ trigger.entity_id == 'binary_sensor.main_control' }}"
  #                       - condition: state
  #                         entity_id: binary_sensor.main_control
  #                         state: "on"

  #                   - condition: and
  #                     conditions:
  #                       - "{{ trigger.entity_id == 'binary_sensor.main_instant_available' }}"
  #                       - condition: state
  #                         entity_id: binary_sensor.main_instant_available
  #                         state: "unavailable"
  #                       - condition: state
  #                         entity_id: binary_sensor.main_control
  #                         state: "off"
  #             sequence:
  #               - service: homeassistant.turn_on
  #                 target:
  #                   entity_id: "{{ all_main_automations }}"

  #           - conditions:
  #               - condition: and
  #                 conditions:
  #                   - "{{ trigger.entity_id == 'binary_sensor.main_control' }}"
  #                   - condition: state
  #                     entity_id: binary_sensor.main_control
  #                     state: "off"
  #             sequence:
  #               - service: homeassistant.turn_off
  #                 target:
  #                   entity_id: "{{ all_main_automations }}"

  #           - conditions:
  #               - condition: and
  #                 conditions:
  #                   - "{{ trigger.entity_id == 'binary_sensor.main_instant_available' }}"
  #                   - condition: state
  #                     entity_id: binary_sensor.main_instant_available
  #                     state: "off"
  #                   - condition: state
  #                     entity_id: binary_sensor.main_control
  #                     state: "off"
  #             sequence:
  #               - delay: 15
  #               - service: homeassistant.turn_off
  #                 target:
  #                   entity_id: "{{ all_main_automations }}"
